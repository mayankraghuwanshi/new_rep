{"version":3,"sources":["Algorithm/bubbleSort.js","Algorithm/insertionSort.js","Algorithm/selectionSort.js","Visualizer/driver.js","Visualizer/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Arr","objArr","arr","slice","i","length","j","push","case","start","end","barOneHeight","barTwoHeight","temp","min","algorithm","speed","size","enableButton","SPEED","barArr","document","getElementsByClassName","obj","setTimeout","startIdx","endIdx","barOneStyle","style","barTwoStyle","backgroundColor","height","innerText","substr","console","log","Visualizer","props","state","disable","SIZE","this","resetArray","Math","floor","random","setState","colorReset","sortingAlgo","print","driver","e","target","value","BOX_SIZE","className","width","margin","type","onClick","cursor","visualize","bubbleSort","insertionSort","selectionSort","max","onChange","onSlideHandler","disabled","map","item","index","key","fontSize","class","align","lineHeight","color","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3ec28c2.chunk.js","sourcesContent":["const COMPARE = 1,\r\n    SWAP = 2,\r\n    ALREDY_SORTED = 3,\r\n    NEW_SORTED_COLOR = 4,\r\n    PREVIOUS_COLOR = 5;\r\n\r\n\r\nconst bubbleSort = (Arr)=>{\r\n    const objArr = []\r\n    let arr = Arr.slice();\r\n    for(let i=0;i<arr.length;i++){\r\n        for(let j=0;j<arr.length-i-1;j++){\r\n            objArr.push({case : COMPARE , start : j , end : j+1})\r\n            if(arr[j+1]<arr[j]){\r\n                objArr.push({case : SWAP , start : j , end : j+1 , barOneHeight : `${arr[j+1]}px`,barTwoHeight : `${arr[j]}px`})\r\n                const temp = arr[j];\r\n                arr[j]=arr[j+1];\r\n                arr[j+1]=temp;\r\n            }else {\r\n                objArr.push({case: ALREDY_SORTED, start: j, end: j+1})\r\n            }\r\n            objArr.push({case: PREVIOUS_COLOR, start: j, end: j+1})\r\n        }\r\n        objArr.push({case : NEW_SORTED_COLOR,start : arr.length-i-1})\r\n    }\r\n    return objArr;\r\n}\r\nmodule.exports = bubbleSort;","const COMPARE = 1,\r\n    SWAP = 2,\r\n    ALREDY_SORTED = 3,\r\n    NEW_SORTED_COLOR = 4,\r\n    PREVIOUS_COLOR = 5;\r\n\r\nconst insertionSort = (Arr) => {\r\n    const objArr = []\r\n    let arr = Arr.slice();\r\n    for(let i=0;i<arr.length;i++){\r\n        for(let j=i+1;j<arr.length;j++){\r\n            //COMPARE\r\n            objArr.push({case : COMPARE,start : i,end : j})\r\n            if(arr[i]<arr[j]){\r\n                //SWAP\r\n                objArr.push({case : SWAP , start : i , end : j , barOneHeight : `${arr[j]}px`,barTwoHeight : `${arr[i]}px`})\r\n                const temp = arr[i];\r\n                arr[i]=arr[j];\r\n                arr[j]=temp;\r\n            }else {\r\n                //ALREDY SORTED\r\n                objArr.push({case: ALREDY_SORTED, start: i, end: j})\r\n            }\r\n            //PREVIOUS COLOR\r\n            objArr.push({case: PREVIOUS_COLOR, start: i, end: j})\r\n        }\r\n        //COLOR BARS WHICH IS NOW SORTED (FROM LEFT TO RIGHT IN INSERTION)\r\n        objArr.push({case : NEW_SORTED_COLOR,start : i})\r\n    }\r\n    return objArr;\r\n}\r\nmodule.exports = insertionSort;","const COMPARE = 1,\r\n    SWAP = 2,\r\n    ALREDY_SORTED = 3,\r\n    NEW_SORTED_COLOR = 4,\r\n    PREVIOUS_COLOR = 5;\r\n\r\nconst selectionSort = (Arr) =>{\r\n    let arr = Arr.slice();\r\n    const objArr = []\r\n    for(let i=0;i<arr.length;i++){\r\n        let min = i;\r\n        for(let j=i+1;j<arr.length;j++){\r\n            //compare\r\n            objArr.push({case : COMPARE , start : min, end : j})\r\n            if(arr[j]<arr[min]){\r\n                objArr.push({case: PREVIOUS_COLOR, start: min, end: j})\r\n                min=j;\r\n            }else{\r\n                objArr.push({case: ALREDY_SORTED, start: min, end: j})\r\n                objArr.push({case: PREVIOUS_COLOR, start: min, end: j})\r\n            }\r\n\r\n\r\n        }\r\n        //swap\r\n        objArr.push({case : SWAP , start : i , end : min , barOneHeight : `${arr[min]}px`,barTwoHeight : `${arr[i]}px`})\r\n        objArr.push({case: PREVIOUS_COLOR, start: i, end: min})\r\n        let temp = arr[i]\r\n        arr[i]=arr[min]\r\n        arr[min]=temp\r\n        objArr.push({case : NEW_SORTED_COLOR,start : i})\r\n    }\r\n    return objArr\r\n}\r\n\r\nmodule.exports = selectionSort;","const COMPARE_COLOR = \"red\";\r\nconst SORTED_COLOR=\"green\";\r\nconst SWAP_COLOR=\"yellow\";\r\nconst PREVIOUS_COLOR=\"#0074D9\"\r\nconst NEW_COLOR=\"#00d999\";\r\n\r\nconst COMPARE_CASE = 1,\r\n    SWAP_CASE = 2,\r\n    ALREDY_SORTED_CASE = 3,\r\n    NEW_SORTED_COLOR_CASE = 4,\r\n    PREVIOUS_COLOR_CASE = 5;\r\n\r\nmodule.exports = function driver (arr , algorithm , speed, size,enableButton) {\r\n    const SPEED = ((speed**2)/size);\r\n    const barArr = document.getElementsByClassName(\"array-bars\");\r\n    const Arr=algorithm(arr)\r\n    for(let i=0;i<Arr.length;i++){\r\n        const obj = Arr[i];\r\n        switch (obj.case) {\r\n            case COMPARE_CASE : setTimeout(()=>{\r\n                const startIdx = obj.start\r\n                const endIdx = obj.end\r\n                const barOneStyle = barArr[startIdx].style;\r\n                const barTwoStyle = barArr[endIdx].style;\r\n                barOneStyle.backgroundColor=COMPARE_COLOR;\r\n                barTwoStyle.backgroundColor=COMPARE_COLOR;\r\n            },i*SPEED)\r\n                break;\r\n            case SWAP_CASE : setTimeout(()=>{\r\n                const startIdx = obj.start\r\n                const endIdx = obj.end\r\n                const barOneStyle = barArr[startIdx].style;\r\n                const barTwoStyle = barArr[endIdx].style;\r\n                barOneStyle.backgroundColor=SWAP_COLOR;\r\n                barTwoStyle.backgroundColor=SWAP_COLOR;\r\n                barOneStyle.height=obj.barOneHeight;\r\n                barTwoStyle.height=obj.barTwoHeight;\r\n                barArr[startIdx].innerText=obj.barOneHeight.substr(0,obj.barOneHeight.length-2);;\r\n                barArr[endIdx].innerText=obj.barTwoHeight.substr(0,obj.barTwoHeight.length-2);\r\n            },i*SPEED)\r\n                break;\r\n            case ALREDY_SORTED_CASE : setTimeout(()=>{\r\n                const startIdx = obj.start\r\n                const endIdx = obj.end\r\n                const barOneStyle = barArr[startIdx].style;\r\n                const barTwoStyle = barArr[endIdx].style;\r\n                barOneStyle.backgroundColor=SORTED_COLOR;\r\n                barTwoStyle.backgroundColor=SORTED_COLOR;\r\n            },i*SPEED)\r\n                break;\r\n            case NEW_SORTED_COLOR_CASE : setTimeout(()=>{\r\n                const startIdx = obj.start;\r\n                const barOneStyle = barArr[startIdx].style;\r\n                barOneStyle.backgroundColor=NEW_COLOR;\r\n            },i*SPEED)\r\n                break;\r\n            case PREVIOUS_COLOR_CASE: setTimeout(()=>{\r\n                const startIdx = obj.start\r\n                const endIdx = obj.end\r\n                const barOneStyle = barArr[startIdx].style;\r\n                const barTwoStyle = barArr[endIdx].style;\r\n                barOneStyle.backgroundColor=PREVIOUS_COLOR;\r\n                barTwoStyle.backgroundColor=PREVIOUS_COLOR;\r\n            },i*SPEED)\r\n                break;\r\n            default : console.log(\"Something weng wrong!\");\r\n        }\r\n    }\r\n    // setTimeout(()=>{enableButton()},Arr.length*SPEED);\r\n}","import React, {Component} from 'react';\r\nimport './Visualizer.css';\r\nimport bubbleSort from '../Algorithm/bubbleSort'\r\nimport insertionSort from '../Algorithm/insertionSort'\r\nimport selectionSort from '../Algorithm/selectionSort'\r\nimport driver from \"./driver\"\r\n\r\n\r\nclass Visualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arr : [],\r\n            disable : false,\r\n            SPEED: 10,\r\n            SIZE : 60,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray(){\r\n        const size=this.state.SIZE;\r\n        const min=20;\r\n        const max=500;\r\n        const arr = [];\r\n        for(let i=0;i<size;i++){\r\n            arr.push(Math.floor(Math.random() * (max - min + 1) + min))\r\n        }\r\n        this.setState({arr});\r\n        this.colorReset()\r\n\r\n    }\r\n    colorReset(){\r\n        const barArr = document.getElementsByClassName(\"array-bars\");\r\n        const arr = this.state.arr;\r\n        for(let i=0;i<arr.length;i++){\r\n            barArr[i].style.backgroundColor=\"#0074D9\";\r\n        }\r\n    }\r\n\r\n    visualize(sortingAlgo,print){\r\n        this.setState({disable : true})\r\n        driver(this.state.arr,sortingAlgo,this.state.SPEED,this.state.SIZE,this.enableButton);\r\n        setTimeout(()=>this.setState({disable : false}),10000)\r\n    }\r\n\r\n    onSlideHandler(e){\r\n        this.setState({SIZE : e.target.value});\r\n        this.resetArray()\r\n    }\r\n\r\n\r\n    render() {\r\n        const arr = this.state.arr;\r\n        // const active = this.state.active;\r\n        // const SPEED = this.state.SPEED;\r\n        const SIZE = this.state.SIZE;\r\n        const BOX_SIZE = Math.floor(800/SIZE);\r\n        const disable = this.state.disable\r\n        return (\r\n            <div>\r\n                <div className=\"Headder\">\r\n                    <div style={{width : \"780px\" , margin : \"auto\" }}>\r\n                        <input className={\"button\"}\r\n                               type=\"button\"\r\n                               value={\"Array Reset\"}\r\n                               onClick={()=>disable?\"\":this.resetArray()}\r\n                               style={{cursor : `${disable?\"wait\":\"pointer\"}`}}\r\n                        />\r\n                        <input className={\"button\"}\r\n                               type={\"button\"}\r\n                               onClick={()=>disable?\"\":this.visualize(bubbleSort)}\r\n                               value={\"Bubble Sort\"}\r\n                               style={{cursor : `${disable?\"wait\":\"pointer\"}`}}\r\n                        />\r\n                        <input className={\"button\"}\r\n                               type={\"button\"}\r\n                               onClick={()=>disable?\"\":this.visualize(insertionSort)}\r\n                               value={\"Insertion Sort\"}\r\n                               style={{cursor : `${disable?\"wait\":\"pointer\"}`}}\r\n                        />\r\n                        <input className={\"button\"}\r\n                               type={\"button\"}\r\n                               onClick={()=>disable?\"\":this.visualize(selectionSort)}\r\n                               value={\"Selection Sort\"}\r\n                               style={{cursor : `${disable?\"wait\":\"pointer\"}`}}\r\n                        />\r\n                        <input className=\"slider\" type={\"range\"} value={this.state.SIZE} min = \"20\" max = \"100\" onChange={(e)=>this.onSlideHandler(e)} disabled={disable}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"array-container\"\r\n                     style={{width :\"100%\"}}>\r\n                    {arr.map((item , index)=>(\r\n                        <div key={index}\r\n                             className=\"array-bars\"\r\n                             style={{fontSize : `${BOX_SIZE/3}px`,  height : `${item}px` ,width : `${BOX_SIZE}px`}}>\r\n                            {item}\r\n                        </div>))}\r\n                </div>\r\n                <div class = \"footer\">\r\n                    <p align=\"center\" style={{fontSize : \"18px\" ,lineHeight : \"20vh\" }}>Beta Version Made in <span style={{color: \"red\"}}>&#9829;</span> with Mayank Raghuvanshi</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Visualizer;","import React from 'react';\r\nimport './App.css';\r\nimport Visualizor from \"./Visualizer/Visualizer\";\r\nfunction App() {\r\n    return <div className={\"App\"}>\r\n        <Visualizor/>\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}